{"version":3,"file":"npm-to-yarn.mjs","sources":["../src/utils.ts","../src/command.ts","../src/yarnToNpm.ts","../src/npmToYarn.ts","../src/npmToPnpm.ts","../src/npmToBun.ts","../src/index.ts"],"sourcesContent":["export const unchangedCLICommands = [\n  'test',\n  'login',\n  'logout',\n  'link',\n  'unlink',\n  'publish',\n  'cache',\n  'start',\n  'stop',\n  'test'\n]\n\nexport const yarnCLICommands = [\n  'init',\n  'run',\n  'add',\n  'audit',\n  'autoclean',\n  'bin',\n  'check',\n  'config',\n  'create',\n  'dedupe',\n  'generate-lock-entry',\n  'global',\n  'help',\n  'import',\n  'info',\n  'install',\n  'licenses',\n  'list',\n  'lockfile',\n  'outdated',\n  'owner',\n  'pack',\n  'policies',\n  'prune',\n  'remove',\n  'self-update',\n  'tag',\n  'team',\n  'upgrade',\n  'upgrade-interactive',\n  'version',\n  'versions',\n  'why',\n  'workspace',\n  'workspaces'\n]\n\nexport const npmCLICommands = [\n  'init',\n  'run',\n  'access',\n  'adduser',\n  'audit',\n  'bin',\n  'bugs',\n  'build',\n  'bundle',\n  'ci',\n  'completion',\n  'config',\n  'dedupe',\n  'deprecate',\n  'dist-tag',\n  'docs',\n  'doctor',\n  'edit',\n  'explore',\n  'exec',\n  'fund',\n  'help-search',\n  'help',\n  'hook',\n  'install-ci-test',\n  'install-test',\n  'install',\n  'ls',\n  'list',\n  'npm',\n  'org',\n  'outdated',\n  'owner',\n  'pack',\n  'ping',\n  'prefix',\n  'profile',\n  'prune',\n  'rebuild',\n  'repo',\n  'restart',\n  'root',\n  'run-script',\n  'search',\n  'shrinkwrap',\n  'star',\n  'stars',\n  'start',\n  'stop',\n  'team',\n  'token',\n  'uninstall',\n  'unpublish',\n  'update',\n  'version',\n  'view',\n  'whoami'\n]\n\nexport const executorCommands = {\n  npm: 'npx',\n  yarn: 'yarn dlx',\n  pnpm: 'pnpm dlx',\n  bun: 'bun x'\n}\n","export function parse (command: string) {\n  const args: string[] = []\n  let lastQuote: string | false = false\n  let escaped = false\n  let part = ''\n  for (let i = 0; i < command.length; ++i) {\n    const char = command.charAt(i)\n    if (char === '\\\\') {\n      part += char\n      escaped = true\n    } else {\n      if (char === ' ' && !lastQuote) {\n        args.push(part)\n        part = ''\n      } else if (!escaped && (char === '\"' || char === \"'\")) {\n        part += char\n        if (char === lastQuote) {\n          lastQuote = false\n        } else if (!lastQuote) {\n          lastQuote = char\n        }\n      } else {\n        part += char\n      }\n      escaped = false\n    }\n  }\n  args.push(part)\n  return args\n}\n","import { unchangedCLICommands, yarnCLICommands } from './utils'\nimport { parse } from './command'\n\nfunction convertAddRemoveArgs (args: string[]) {\n  return args.map(item => {\n    switch (item) {\n      case '--no-lockfile':\n        return '--no-package-lock'\n      case '--production':\n        return '--save-prod'\n      case '--dev':\n        return '--save-dev'\n      case '--optional':\n        return '--save-optional'\n      case '--exact':\n        return '--save-exact'\n      default:\n        return item\n    }\n  })\n}\n\nconst yarnToNpmTable = {\n  add (args: string[]) {\n    if (args.length === 2 && args[1] === '--force') {\n      return ['rebuild']\n    }\n    args[0] = 'install'\n    return convertAddRemoveArgs(args)\n  },\n  remove (args: string[]) {\n    args[0] = 'uninstall'\n    return convertAddRemoveArgs(args)\n  },\n  version (args: string[]) {\n    return args.map(item => {\n      switch (item) {\n        case '--major':\n          return 'major'\n        case '--minor':\n          return 'minor'\n        case '--patch':\n          return 'patch'\n        default:\n          return item\n      }\n    })\n  },\n  install: 'install',\n  list (args: string[]) {\n    args[0] = 'ls'\n    const patternIndex = args.findIndex(item => item === '--pattern')\n    if (patternIndex >= 0 && args[patternIndex + 1]) {\n      const packages = args[patternIndex + 1].replace(/[\"']([^\"']+)[\"']/, '$1').split('|')\n      args.splice(patternIndex, 2, packages.join(' '))\n    }\n    return args\n  },\n  init: 'init',\n  create: 'init',\n  outdated: 'outdated',\n  run: 'run',\n  global (args: string[]) {\n    switch (args[1]) {\n      case 'add':\n        args.shift()\n        args = yarnToNpmTable.add(args)\n        args.push('--global')\n        return args\n      case 'remove':\n        args.shift()\n        args = yarnToNpmTable.remove(args)\n        args.push('--global')\n        return args\n      case 'list':\n        args.shift()\n        args = yarnToNpmTable.list(args)\n        args.push('--global')\n        return args\n      // case 'bin':\n      // case 'upgrade':\n      default:\n        args.push(\"\\n# couldn't auto-convert command\")\n        return args\n    }\n  },\n  pack (args: string[]) {\n    return args.map(item => {\n      if (item === '--filename') {\n        return '--pack-destination'\n      }\n      return item\n    })\n  }\n}\n\nexport function yarnToNPM (_m: string, command: string): string {\n  command = (command || '').trim()\n  if (command === '') {\n    return 'npm install'\n  }\n  let args = parse(command)\n  const firstCommand = (/\\w+/.exec(command) || [''])[0]\n\n  if (unchangedCLICommands.includes(args[0])) {\n    return 'npm ' + command\n  } else if (args[0] in yarnToNpmTable) {\n    const converter = yarnToNpmTable[args[0] as keyof typeof yarnToNpmTable]\n\n    if (typeof converter === 'function') {\n      args = converter(args)\n    } else {\n      args[0] = converter\n    }\n\n    return 'npm ' + args.filter(Boolean).join(' ')\n  } else if (!yarnCLICommands.includes(firstCommand)) {\n    // i.e., yarn grunt -> npm run grunt\n    return 'npm run ' + command\n  } else {\n    return 'npm ' + command + \"\\n# couldn't auto-convert command\"\n  }\n}\n","import { unchangedCLICommands, yarnCLICommands } from './utils'\nimport { parse } from './command'\n\nfunction convertInstallArgs (args: string[]) {\n  if (args.includes('--global') || args.includes('-g')) {\n    args.unshift('global')\n  }\n\n  return args.map(item => {\n    switch (item) {\n      case '--save-dev':\n      case '-D':\n        return '--dev'\n      case '--save-prod':\n      case '-P':\n        return '--production'\n      case '--no-package-lock':\n        return '--no-lockfile'\n      case '--save-optional':\n      case '-O':\n        return '--optional'\n      case '--save-exact':\n      case '-E':\n        return '--exact'\n      case '--save':\n      case '-S':\n      case '--global':\n      case '-g':\n        return ''\n      default:\n        return item\n    }\n  })\n}\n\nconst npmToYarnTable = {\n  install (args: string[]) {\n    if (args.length === 1) {\n      return ['install']\n    }\n    args[0] = 'add'\n\n    return convertInstallArgs(args)\n  },\n  i (args: string[]) {\n    return npmToYarnTable.install(args)\n  },\n  uninstall (args: string[]) {\n    args[0] = 'remove'\n\n    return convertInstallArgs(args)\n  },\n  un (args: string[]) {\n    return npmToYarnTable.uninstall(args)\n  },\n  remove (args: string[]) {\n    return npmToYarnTable.uninstall(args)\n  },\n  r (args: string[]) {\n    return npmToYarnTable.uninstall(args)\n  },\n  rm (args: string[]) {\n    return npmToYarnTable.uninstall(args)\n  },\n  version (args: string[]) {\n    return args.map(item => {\n      switch (item) {\n        case 'major':\n          return '--major'\n        case 'minor':\n          return '--minor'\n        case 'patch':\n          return '--patch'\n        default:\n          return item\n      }\n    })\n  },\n  rb (args: string[]) {\n    return npmToYarnTable.rebuild(args)\n  },\n  rebuild (args: string[]) {\n    args[0] = 'add'\n    args.push('--force')\n    return args\n  },\n  run (args: string[]) {\n    if (args[1] && !unchangedCLICommands.includes(args[1]) && !yarnCLICommands.includes(args[1])) {\n      args.splice(0, 1)\n    }\n    return args\n  },\n  exec (args: string[]) {\n    args[0] = 'run'\n    return npmToYarnTable.run(args)\n  },\n  ls (args: string[]) {\n    args[0] = 'list'\n\n    let ended = false\n    const packages = args.filter((item, id) => {\n      if (id > 0 && !ended) {\n        ended = item.startsWith('-')\n        return !ended\n      }\n      return false\n    })\n    if (packages.length > 0) {\n      args.splice(1, packages.length, '--pattern', '\"' + packages.join('|') + '\"')\n    }\n    return args\n  },\n  list (args: string[]) {\n    return npmToYarnTable.ls(args)\n  },\n  init (args: string[]) {\n    if (args[1] && !args[1].startsWith('-')) {\n      args[0] = 'create'\n    }\n    return args.filter(item => item !== '--scope')\n  },\n  ln: 'link',\n  t: 'test',\n  tst: 'test',\n  outdated: 'outdated',\n  pack (args: string[]) {\n    return args.map(item => {\n      if (item.startsWith('--pack-destination')) {\n        return item.replace(/^--pack-destination[\\s=]/, '--filename ')\n      }\n      return item\n    })\n  }\n}\n\nexport function npmToYarn (_m: string, command: string): string {\n  let args = parse((command || '').trim())\n\n  const index = args.findIndex(a => a === '--')\n  if (index >= 0) {\n    args.splice(index, 1)\n  }\n\n  if (unchangedCLICommands.includes(args[0])) {\n    return 'yarn ' + args.filter(Boolean).join(' ')\n  } else if (args[0] in npmToYarnTable) {\n    const converter = npmToYarnTable[args[0] as keyof typeof npmToYarnTable]\n\n    if (typeof converter === 'function') {\n      args = converter(args)\n    } else {\n      args[0] = converter\n    }\n\n    return 'yarn ' + args.filter(Boolean).join(' ')\n  } else {\n    return 'npm ' + command + \"\\n# couldn't auto-convert command\"\n  }\n}\n","import { parse } from './command'\n\nfunction convertPnpmInstallArgs (args: string[]) {\n  return args.map(item => {\n    switch (item) {\n      case '--save':\n      case '-S':\n        return ''\n      case '--no-package-lock':\n        return '--frozen-lockfile'\n      // case '--save-dev':\n      // case '-D':\n      // case '--save-prod':\n      // case '-P':\n      // case '--save-optional':\n      // case '-O':\n      // case '--save-exact':\n      // case '-E':\n      // case '--global':\n      // case '-g':\n      default:\n        return item\n    }\n  })\n}\n\nfunction convertFilterArg (args: string[]) {\n  if (args.length > 1) {\n    const filter = args.filter((item, index) => index !== 0 && !item.startsWith('-'))\n    if (filter.length > 0) {\n      args = args.filter((item, index) => index === 0 || item.startsWith('-'))\n      args.push('--filter')\n      args.push(filter.join(' '))\n    }\n  }\n\n  return args\n}\n\nconst npmToPnpmTable = {\n  // ------------------------------\n  install (args: string[]) {\n    if (args.length > 1 && args.filter(item => !item.startsWith('-')).length > 1) {\n      args[0] = 'add'\n    }\n    return convertPnpmInstallArgs(args)\n  },\n  i (args: string[]) {\n    return npmToPnpmTable.install(args)\n  },\n  // ------------------------------\n  uninstall (args: string[]) {\n    args[0] = 'remove'\n\n    return convertPnpmInstallArgs(args)\n  },\n  un (args: string[]) {\n    return npmToPnpmTable.uninstall(args)\n  },\n  remove (args: string[]) {\n    return npmToPnpmTable.uninstall(args)\n  },\n  r (args: string[]) {\n    return npmToPnpmTable.uninstall(args)\n  },\n  rm (args: string[]) {\n    return npmToPnpmTable.uninstall(args)\n  },\n  // ------------------------------\n  rb (args: string[]) {\n    return npmToPnpmTable.rebuild(args)\n  },\n  rebuild (args: string[]) {\n    args[0] = 'rebuild'\n    return convertFilterArg(args)\n  },\n  run: 'run',\n  exec: 'exec',\n  ls (args: string[]) {\n    return npmToPnpmTable.list(args)\n  },\n  list (args: string[]) {\n    return args.map(item => {\n      if (item.startsWith('--depth=')) {\n        return `--depth ${item.split('=')[1]}`\n      }\n      switch (item) {\n        case '--production':\n          return '--prod'\n        case '--development':\n          return '--dev'\n        default:\n          return item\n      }\n    })\n  },\n  init (args: string[]) {\n    if (args[1] && !args[1].startsWith('-')) {\n      args[0] = 'create'\n    }\n    return args.filter(item => item !== '--scope')\n  },\n  ln: 'link',\n  t: 'test',\n  test: 'test',\n  tst: 'test',\n  start: 'start',\n  link: 'link',\n  unlink (args: string[]) {\n    return convertFilterArg(args)\n  },\n  outdated: 'outdated',\n  pack: (args: string[]) => {\n    return args.map(item => {\n      if (item.startsWith('--pack-destination')) {\n        return item.replace(/^--pack-destination[\\s=]/, '--pack-destination ')\n      }\n      return item\n    })\n  }\n}\n\nexport function npmToPnpm (_m: string, command: string): string {\n  let args = parse((command || '').trim())\n\n  const index = args.findIndex(a => a === '--')\n  if (index >= 0) {\n    args.splice(index, 1)\n  }\n\n  if (args[0] in npmToPnpmTable) {\n    const converter = npmToPnpmTable[args[0] as keyof typeof npmToPnpmTable]\n\n    if (typeof converter === 'function') {\n      args = converter(args)\n    } else {\n      args[0] = converter\n    }\n\n    return 'pnpm ' + args.filter(Boolean).join(' ')\n  } else {\n    return 'npm ' + command + \"\\n# couldn't auto-convert command\"\n  }\n}\n","import { parse } from './command'\n\nfunction convertInstallArgs (args: string[]) {\n  // bun uses -g and --global flags\n  // bun mostly conforms to Yarn's CLI\n  return args.map(item => {\n    switch (item) {\n      case '--save-dev':\n      case '--development':\n      case '-D':\n        return '--dev'\n      case '--save-prod':\n      case '-P':\n        return '--production'\n      case '--no-package-lock':\n        return '--no-save'\n      case '--save-optional':\n      case '-O':\n        return '--optional'\n      case '--save-exact':\n      case '-E':\n        return '--exact'\n      case '--save':\n      case '-S':\n        // this is default in bun\n        return ''\n      case '--global':\n      case '-g':\n        return '--global'\n      default:\n        return item\n    }\n  })\n}\n\nexport const bunCLICommands = [\n  'init',\n  'run',\n  'add',\n  'pm',\n  'help',\n  'install',\n  'remove',\n  'upgrade',\n  'version'\n] as const\ntype bunCLICommands = typeof bunCLICommands[number]\n\nexport function npmToBun (_m: string, command: string): string {\n  let args = parse((command || '').trim())\n\n  const index = args.findIndex(a => a === '--')\n  if (index >= 0) {\n    args.splice(index, 1)\n  }\n\n  let cmd = 'bun'\n  switch (args[0]) {\n    case 'install':\n    case 'i':\n      if (args.length === 1) {\n        args = ['install']\n      } else {\n        args[0] = 'add'\n      }\n      args = convertInstallArgs(args)\n      break\n    case 'uninstall':\n    case 'un':\n    case 'remove':\n    case 'r':\n    case 'rm':\n      args[0] = 'remove'\n      args = convertInstallArgs(args)\n      break\n    case 'cache':\n      if (args[1] === 'clean') {\n        args = ['pm', 'cache', 'rm'].concat(args.slice(2))\n      } else {\n        cmd = 'npm'\n      }\n      break\n    case 'rebuild':\n    case 'rb':\n      args[0] = 'add'\n      args.push('--force')\n      break\n    case 'run':\n      break\n    case 'list':\n    case 'ls':\n      // 'npm ls' => 'bun pm ls'\n      args = convertInstallArgs(args)\n      args[0] = 'ls'\n      args.unshift('pm')\n      break\n    case 'init':\n    case 'create':\n      if (args[1]) {\n        if (args[1].startsWith('@')) {\n          cmd = 'bunx'\n\n          args[1] = args[1].replace('/', '/create-')\n          args = args.slice(1)\n        } else if (!args[1].startsWith('-')) {\n          cmd = 'bunx'\n          args[1] = `create-${args[1]}`\n          args = args.slice(1)\n        } else {\n          args[0] = 'init'\n        }\n      }\n      break\n\n    case 'link':\n    case 'ln':\n      args = convertInstallArgs(args)\n      args[0] = 'link'\n      break\n    case 'stop':\n    case 'start':\n    case 'unlink':\n      break\n    case 'test':\n    case 't':\n    case 'tst':\n      args[0] = 'test'\n      args.unshift('run')\n      break\n    case 'exec':\n      cmd = 'bunx'\n      args.splice(0, 1)\n      break\n    default:\n      // null == keep `npm` command\n      cmd = 'npm'\n      break\n  }\n\n  const filtered = args.filter(Boolean).filter(arg => arg !== '--')\n  return `${cmd} ${filtered.join(' ')}${\n    cmd === 'npm' ? \"\\n# couldn't auto-convert command\" : ''\n  }`.replace('=', ' ')\n}\n","import { yarnToNPM } from './yarnToNpm'\nimport { npmToYarn } from './npmToYarn'\nimport { npmToPnpm } from './npmToPnpm'\nimport { npmToBun } from './npmToBun'\nimport { executorCommands } from './utils'\n\ntype Command = 'npm' | 'yarn' | 'pnpm' | 'bun'\n\n/**\n * Converts between npm and yarn command\n */\n\nexport function convert (str: string, to: 'npm' | 'yarn' | 'pnpm' | 'bun'): string {\n  if (\n    str.includes('npx') ||\n    str.includes('yarn dlx') ||\n    str.includes('pnpm dlx') ||\n    str.includes('bun x')\n  ) {\n    const executor = str.includes('npx')\n      ? 'npx'\n      : str.includes('yarn dlx')\n      ? 'yarn dlx'\n      : str.includes('pnpm dlx')\n      ? 'pnpm dlx'\n      : 'bun x'\n    return str.replace(executor, executorCommands[to])\n  } else if (to === 'npm') {\n\n    return str.replace(/yarn(?: +([^&\\n\\r]*))?/gm, yarnToNPM)\n  } else if (to === 'pnpm') {\n    return str.replace(/npm(?: +([^&\\n\\r]*))?/gm, npmToPnpm)\n  } else if (to === 'bun') {\n    return str.replace(/npm(?: +([^&\\n\\r]*))?/gm, npmToBun)\n  } else {\n    return str.replace(/npm(?: +([^&\\n\\r]*))?/gm, npmToYarn)\n  }\n}\n\n\nexport function convertMultiple (str: string | string[], to: Command | Command[]): string[] {\n  const commands : string[] = []\n\n  // one to many\n  if (typeof str === 'string' && Array.isArray(to)) {\n    to.forEach((t) => {\n      commands.push(convert(str, t))\n    })\n  }\n  // many to one\n  else if (Array.isArray(str) && typeof to === 'string') {\n    str.forEach((s) => {\n      commands.push(convert(s, to))\n    })\n  }\n  // many to many\n  else if (Array.isArray(str) && Array.isArray(to)) {\n    to.forEach((t) => {\n      str.forEach((s) => {\n        commands.push(convert(s, t))\n      })\n    })\n  }\n\n  return commands\n}\n\nexport type { Command }"],"names":["convertInstallArgs"],"mappings":"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"}